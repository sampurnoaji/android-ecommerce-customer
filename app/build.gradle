plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

def keyProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keyProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "io.olebsai.customer"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keyProperties['keyAlias']
            keyPassword keyProperties['keyPassword']
            storeFile keyProperties['storeFile'] ? file(keyProperties['storeFile']) : null
            storePassword keyProperties['storePassword']
        }
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            dimension "version"
            resValue "string", "app_name", "Oleb Sai-Dev"
            buildConfigField "String", "API_BASE_URL", API_BASE_URL_DEV
        }
        production {
            dimension "version"
            resValue "string", "app_name", "Oleb Sai"
            buildConfigField "String", "API_BASE_URL", API_BASE_URL
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Security
    def security_crypto = "1.1.0-alpha01"
    implementation("androidx.security:security-crypto:$security_crypto")
    
    // Dependency Injection
    def hilt = "2.38.1"
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-compiler:$hilt"

    // Kotlin Extension
    def ktx_core = "1.7.0"
    def ktx_fragment = "1.4.1"
    def ktx_lifecycle = "2.4.1"
    def ktx_room = "2.4.2"
    implementation("androidx.core:core-ktx:$ktx_core")
    implementation("androidx.fragment:fragment-ktx:$ktx_fragment")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$ktx_lifecycle")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$ktx_lifecycle")
    implementation("androidx.room:room-ktx:$ktx_room")

    // Database
    def room = "2.4.0"
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"

    // Network
    def retrofit = "2.9.0"
    def logging_interceptor = "4.9.3"
    def chucker = "3.5.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
    debugImplementation "com.github.chuckerteam.chucker:library:$chucker"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chucker"

    // UI
    def paging = "3.1.1"
    def coil = "2.0.0-rc03"
    def lottie = "5.2.0"
    def swipeRefreshLayout = "1.1.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging"
    implementation("io.coil-kt:coil:$coil")
    implementation("com.airbnb.android:lottie:$lottie")
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayout"
}